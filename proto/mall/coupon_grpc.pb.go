// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: portal/coupon.proto

package mall

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	PortalCouponApi_CouponAdd_FullMethodName           = "/admin.PortalCouponApi/CouponAdd"
	PortalCouponApi_CouponListHistory_FullMethodName   = "/admin.PortalCouponApi/CouponListHistory"
	PortalCouponApi_CouponList_FullMethodName          = "/admin.PortalCouponApi/CouponList"
	PortalCouponApi_CouponListCart_FullMethodName      = "/admin.PortalCouponApi/CouponListCart"
	PortalCouponApi_CouponListByProduct_FullMethodName = "/admin.PortalCouponApi/CouponListByProduct"
)

// PortalCouponApiClient is the client API for PortalCouponApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PortalCouponApiClient interface {
	// 领取指定优惠券
	CouponAdd(ctx context.Context, in *CouponAddReq, opts ...grpc.CallOption) (*CouponAddRsp, error)
	// 获取会员优惠券历史列表
	CouponListHistory(ctx context.Context, in *CouponListHistoryReq, opts ...grpc.CallOption) (*CouponListHistoryRsp, error)
	// 获取会员优惠券列表
	CouponList(ctx context.Context, in *CouponListReq, opts ...grpc.CallOption) (*CouponListRsp, error)
	// 获取登录会员购物车的相关优惠券
	CouponListCart(ctx context.Context, in *CouponListCartReq, opts ...grpc.CallOption) (*CouponListCartRsp, error)
	// 获取当前商品相关优惠券
	CouponListByProduct(ctx context.Context, in *CouponListByProductReq, opts ...grpc.CallOption) (*CouponListByProductRsp, error)
}

type portalCouponApiClient struct {
	cc grpc.ClientConnInterface
}

func NewPortalCouponApiClient(cc grpc.ClientConnInterface) PortalCouponApiClient {
	return &portalCouponApiClient{cc}
}

func (c *portalCouponApiClient) CouponAdd(ctx context.Context, in *CouponAddReq, opts ...grpc.CallOption) (*CouponAddRsp, error) {
	out := new(CouponAddRsp)
	err := c.cc.Invoke(ctx, PortalCouponApi_CouponAdd_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portalCouponApiClient) CouponListHistory(ctx context.Context, in *CouponListHistoryReq, opts ...grpc.CallOption) (*CouponListHistoryRsp, error) {
	out := new(CouponListHistoryRsp)
	err := c.cc.Invoke(ctx, PortalCouponApi_CouponListHistory_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portalCouponApiClient) CouponList(ctx context.Context, in *CouponListReq, opts ...grpc.CallOption) (*CouponListRsp, error) {
	out := new(CouponListRsp)
	err := c.cc.Invoke(ctx, PortalCouponApi_CouponList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portalCouponApiClient) CouponListCart(ctx context.Context, in *CouponListCartReq, opts ...grpc.CallOption) (*CouponListCartRsp, error) {
	out := new(CouponListCartRsp)
	err := c.cc.Invoke(ctx, PortalCouponApi_CouponListCart_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portalCouponApiClient) CouponListByProduct(ctx context.Context, in *CouponListByProductReq, opts ...grpc.CallOption) (*CouponListByProductRsp, error) {
	out := new(CouponListByProductRsp)
	err := c.cc.Invoke(ctx, PortalCouponApi_CouponListByProduct_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PortalCouponApiServer is the server API for PortalCouponApi service.
// All implementations must embed UnimplementedPortalCouponApiServer
// for forward compatibility
type PortalCouponApiServer interface {
	// 领取指定优惠券
	CouponAdd(context.Context, *CouponAddReq) (*CouponAddRsp, error)
	// 获取会员优惠券历史列表
	CouponListHistory(context.Context, *CouponListHistoryReq) (*CouponListHistoryRsp, error)
	// 获取会员优惠券列表
	CouponList(context.Context, *CouponListReq) (*CouponListRsp, error)
	// 获取登录会员购物车的相关优惠券
	CouponListCart(context.Context, *CouponListCartReq) (*CouponListCartRsp, error)
	// 获取当前商品相关优惠券
	CouponListByProduct(context.Context, *CouponListByProductReq) (*CouponListByProductRsp, error)
	mustEmbedUnimplementedPortalCouponApiServer()
}

// UnimplementedPortalCouponApiServer must be embedded to have forward compatible implementations.
type UnimplementedPortalCouponApiServer struct {
}

func (UnimplementedPortalCouponApiServer) CouponAdd(context.Context, *CouponAddReq) (*CouponAddRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CouponAdd not implemented")
}
func (UnimplementedPortalCouponApiServer) CouponListHistory(context.Context, *CouponListHistoryReq) (*CouponListHistoryRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CouponListHistory not implemented")
}
func (UnimplementedPortalCouponApiServer) CouponList(context.Context, *CouponListReq) (*CouponListRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CouponList not implemented")
}
func (UnimplementedPortalCouponApiServer) CouponListCart(context.Context, *CouponListCartReq) (*CouponListCartRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CouponListCart not implemented")
}
func (UnimplementedPortalCouponApiServer) CouponListByProduct(context.Context, *CouponListByProductReq) (*CouponListByProductRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CouponListByProduct not implemented")
}
func (UnimplementedPortalCouponApiServer) mustEmbedUnimplementedPortalCouponApiServer() {}

// UnsafePortalCouponApiServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PortalCouponApiServer will
// result in compilation errors.
type UnsafePortalCouponApiServer interface {
	mustEmbedUnimplementedPortalCouponApiServer()
}

func RegisterPortalCouponApiServer(s grpc.ServiceRegistrar, srv PortalCouponApiServer) {
	s.RegisterService(&PortalCouponApi_ServiceDesc, srv)
}

func _PortalCouponApi_CouponAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponAddReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortalCouponApiServer).CouponAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PortalCouponApi_CouponAdd_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortalCouponApiServer).CouponAdd(ctx, req.(*CouponAddReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortalCouponApi_CouponListHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponListHistoryReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortalCouponApiServer).CouponListHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PortalCouponApi_CouponListHistory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortalCouponApiServer).CouponListHistory(ctx, req.(*CouponListHistoryReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortalCouponApi_CouponList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortalCouponApiServer).CouponList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PortalCouponApi_CouponList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortalCouponApiServer).CouponList(ctx, req.(*CouponListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortalCouponApi_CouponListCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponListCartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortalCouponApiServer).CouponListCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PortalCouponApi_CouponListCart_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortalCouponApiServer).CouponListCart(ctx, req.(*CouponListCartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortalCouponApi_CouponListByProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponListByProductReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortalCouponApiServer).CouponListByProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PortalCouponApi_CouponListByProduct_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortalCouponApiServer).CouponListByProduct(ctx, req.(*CouponListByProductReq))
	}
	return interceptor(ctx, in, info, handler)
}

// PortalCouponApi_ServiceDesc is the grpc.ServiceDesc for PortalCouponApi service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PortalCouponApi_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "admin.PortalCouponApi",
	HandlerType: (*PortalCouponApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CouponAdd",
			Handler:    _PortalCouponApi_CouponAdd_Handler,
		},
		{
			MethodName: "CouponListHistory",
			Handler:    _PortalCouponApi_CouponListHistory_Handler,
		},
		{
			MethodName: "CouponList",
			Handler:    _PortalCouponApi_CouponList_Handler,
		},
		{
			MethodName: "CouponListCart",
			Handler:    _PortalCouponApi_CouponListCart_Handler,
		},
		{
			MethodName: "CouponListByProduct",
			Handler:    _PortalCouponApi_CouponListByProduct_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "portal/coupon.proto",
}
